<?phpclass Application_Model_AddonCourseModel extends Zend_Db_Table_Abstract {    public $_name = 'addon_course_mater';    protected $_id = 'id';    public function getRecord($id) {        $select = $this->_db->select()                ->from($this->_name)                ->where("$this->_name.$this->_id = ?", $id);//echo $select ; die;        $result = $this->getAdapter()                ->fetchRow($select);        return $result;    }          public function getRecordbyids($id) {        $select = $this->_db->select()                ->from($this->_name)                ->where("$this->_name.$this->_id in (?)", $id);               // echo $select ; die;       $result = $this->getAdapter()                ->fetchAll($select);        return $result;    }        public function getRecordbyacadid($id,$year_is) {        $select = $this->_db->select()                ->from($this->_name)                 ->joinLeft(array('addon_item' => 'addon_course_master_item'), "addon_item.addon_mater_id = $this->_name.id", array('capacity','fee','tot_credit','academic_year','id as itemid'))                ->where("addon_item.academic_year = ?", $year_is)                ->where("$this->_name.$this->_id =?", $id);               // echo "<pre>".$select;die;        $result = $this->getAdapter()                ->fetchRow($select);        return $result;    }    public function checkExistedData($acadYear) {        $select = $this->_db->select()                ->from($this->_name)                ->where("$this->_name.academic_year =?", $acadYear)                ->where("$this->_name.status != ?", 2);        $result = $this->getAdapter()                ->fetchAll($select);        return $result;    }        public function getRecords($year_is='5') {        $select = $this->_db->select()                ->from($this->_name, array('name', 'id', 'conductedby','code', "count(distinct(addon_allot.stu_id)) as total_applied"))                 ->join(array('addon_item' => 'addon_course_master_item'), "addon_item.addon_mater_id = $this->_name.id", array('capacity','fee','tot_credit','academic_year','id as itemid'))              ->joinLeft(array('addon_allot' => 'addon_courses_allotment'), "addon_allot.addon_course_id = $this->_name.id and addon_allot.academic_year=$year_is", array())              ->where("$this->_name.status != ?", 2)                ->where("addon_item.academic_year = ?", $year_is)                ->group("$this->_name.id");              //  ->having("count(distinct(addon_allot.stu_id)) <= capacity");                    //    echo $select;die;        $result = $this->getAdapter()                ->fetchAll($select);        return $result;    }    public function getAddonCourseCount($yearId) {        $select = $this->_db->select()                ->from($this->_name, array('name', 'id', 'conductedby','code', "count(distinct(addon_allot.stu_id)) as total_applied"))                 ->join(array('addon_item' => 'addon_course_master_item'), "addon_item.addon_mater_id = $this->_name.id", array('capacity','fee','tot_credit','academic_year','id as itemid'))                ->joinleft(array('addon_allot' => 'addon_courses_allotment'), "addon_allot.addon_course_id = $this->_name.id and addon_allot.academic_year=$yearId", array())              ->where("$this->_name.status != ?", 2)              ->where("addon_item.status != ?", 2)                ->where("addon_item.academic_year = ?", $yearId)                ->group("$this->_name.id");      //  echo "<pre>".$select;die;        $result = $this->getAdapter()                ->fetchAll($select);        return $result;    }    public function getAddonCoursePaidCount($yearId=5) {                      $select = "SELECT addon_course_mater.id as addon_course_id,addon_course_mater.name,degree_info.degree,count(erp_student_information.stu_id) total_paid,fee FROM `addon_courses_allotment`,addon_course_mater,addon_course_master_item,erp_student_information,academic_master,department,degree_infowhere addon_course_mater.id = addon_courses_allotment.addon_course_idand addon_course_master_item.addon_mater_id = addon_course_mater.idand addon_course_master_item.academic_year = academic_master.academic_yearand addon_courses_allotment.stu_id = erp_student_information.stu_idand erp_student_information.academic_id = academic_master.academic_year_idand academic_master.department = department.idand degree_info.id = department.degree_idand academic_master.academic_year = $yearId  group by addon_mater_id";//echo $select; die; $result = $this->getAdapter()                ->fetchAll($select);                return $result;                    }        public function getAddonCourseDetails($yearId=5,$id=1){        $select = "SELECT erp_student_information.stu_id,erp_student_information.stu_fname,addon_course_mater.name,erp_student_information.exam_roll,erp_student_information.reg_no,erp_student_information.roll_no,department.department,addon_course_master_item.fee FROM `addon_courses_allotment`,addon_course_mater,addon_course_master_item,erp_student_information,academic_master,departmentwhere addon_course_mater.id = addon_courses_allotment.addon_course_idand addon_course_master_item.addon_mater_id = addon_course_mater.idand addon_course_master_item.academic_year = academic_master.academic_yearand addon_courses_allotment.stu_id = erp_student_information.stu_idand erp_student_information.academic_id = academic_master.academic_year_idand academic_master.department = department.idand addon_course_mater.id = $idand academic_master.academic_year = $yearId"; $result = $this->getAdapter()                ->fetchAll($select);                 return $result;    }            public function getAddonCourseTotal($yearId=5,$course_id=1){        $select = "SELECT addon_course_mater.id,addon_course_mater.name,degree_info.degree,count(erp_student_information.stu_id) total,fee FROM `addon_courses_allotment`,addon_course_mater,addon_course_master_item,erp_student_information,academic_master,department,degree_infowhere addon_course_mater.id = addon_courses_allotment.addon_course_idand addon_course_master_item.addon_mater_id = addon_course_mater.idand addon_course_master_item.academic_year = academic_master.academic_yearand addon_courses_allotment.stu_id = erp_student_information.stu_idand erp_student_information.academic_id = academic_master.academic_year_idand academic_master.department = department.idand degree_info.id = department.degree_idand academic_master.academic_year = $yearId  and addon_course_mater.id = $course_idgroup by addon_mater_id"; $result = $this->getAdapter()                ->fetchAll($select);                return $result;    }    public function getRecordByAddonCourse($addon_course_id,$acadid='') {        $select = $this->_db->select()                ->from('addon_courses_allotment', array())                ->joinLeft(array('course_d' => 'applicant_course_details'), "course_d.form_id = addon_courses_allotment.stu_id", array('course_d.applicant_name', 'course_d.form_id', 'course_d.course'))                ->joinLeft(array('deptType' => 'department_type'), "deptType.id = course_d.course", array('department_type'))                ->joinLeft(array('students' => 'erp_student_information'), "students.stu_id = course_d.form_id", array('reg_no', 'exam_roll', 'roll_no', 'stu_email_id', 'father_mobileno','stu_status'))                ->where("addon_courses_allotment.addon_course_id = ?", $addon_course_id)                ->where("addon_courses_allotment.academic_year = ?", $acadid);        //echo $select;die;        $result = $this->getAdapter()                ->fetchAll($select);        return $result;    }    public function getRecordByAddonStream($addon_course_id, $stream) {        $select = $this->_db->select()                ->from('addon_courses_allotment', array())                ->joinLeft(array('course_d' => 'applicant_course_details'), "course_d.form_id = addon_courses_allotment.stu_id", array('course_d.applicant_name', 'course_d.form_id', 'course_d.course'))                ->joinLeft(array('deptType' => 'department_type'), "deptType.id = course_d.course", array('department_type'))                ->where("deptType.id = ?", $stream)                ->where("addon_courses_allotment.addon_course_id = ?", $addon_course_id);        //echo $select;die;        $result = $this->getAdapter()                ->fetchAll($select);        return $result;    }    public function getDropDownList() {        $select = $this->_db->select()                ->from($this->_name, array('id', 'name'))                //->where("status !=?",2)                ->order('name  ASC');        $result = $this->getAdapter()->fetchAll($select);        $data = array();        $st_year = '';        $end_year = '';        foreach ($result as $val) {            $data[$val['id']] = $val['name'];            // $data[$val['academic_id']] = substr($val['from_date']).'-'.substr($val['to_date']);                  }         return $data;    }     public function getStudentAddonUniqueFee($course_id,$academic_year=5){         $select = $this->_db->select()                ->from($this->_name, array('name', 'id as course_id', 'conductedby','code', "count(distinct(addon_allot.stu_id)) as total_seat_no"))                 ->join(array('addon_item' => 'addon_course_master_item'), "addon_item.addon_mater_id = $this->_name.id", array('capacity','fee','tot_credit','academic_year','id as itemid'))              ->join(array('addon_allot' => 'addon_courses_allotment'), "addon_allot.addon_course_id = $this->_name.id and addon_allot.academic_year=$academic_year", array())                            ->where("addon_allot.addon_course_id = ?", $course_id)                ->where("addon_item.academic_year = ?", $academic_year)                ->where("addon_item.status != ?", 2);              //  ->having("count(distinct(addon_allot.stu_id)) <= capacity");        $result = $this->getAdapter()                ->fetchRow($select);        return $result;}         public function getDropDownListByYear($academic_year=5) {        $select = $this->_db->select()                ->from($this->_name, array('id', 'name'))->join(array('addon_item' => 'addon_course_master_item'), "addon_item.addon_mater_id = $this->_name.id", array('capacity','fee','tot_credit','academic_year','id as itemid'))                ->where("addon_item.academic_year= ?", $academic_year)               ->where("addon_item.status != ?", 2)                ->order('name  ASC');//echo "<pre>".$select; die;        $result = $this->getAdapter()->fetchAll($select);   return $result;                }public function getRecordByID($id) {             $select = $this->_db->select()                ->from($this->_name)                ->where("$this->_name.id = ?", $id)                ->where("$this->_name.status != ?", 2);        $result = $this->getAdapter()                ->fetchRow($select);        return $result;    }        public function getRecordByAcad($id,$acad) {             $select = $this->_db->select()                ->from($this->_name)                 ->join(array('addon_item' => 'addon_course_master_item'), "addon_item.addon_mater_id = $this->_name.id", array('capacity','fee','tot_credit','academic_year','id as itemid'))                ->where("$this->_name.id = ?", $id)                ->where("addon_item.academic_year= ?", $acad)               ->where("addon_item.status != ?", 2);        $result = $this->getAdapter()                ->fetchAll($select);        return $result;    }           public function getAddonExcelDropDownList() {             $select = $this->_db->select()                ->from("excel_addon")                                ->group("Course_Name")                ->order('Course_Name');        $result = $this->getAdapter()                ->fetchAll($select);        $data = array();        foreach ($result as $val) {            $data[$val['Course_Name']] = $val['Course_Name'];            // $data[$val['academic_id']] = substr($val['from_date']).'-'.substr($val['to_date']);            //print_r($data);die;        }        return $data;    }      public function getAddonExcelDropDownListbysession($session) {             $select = $this->_db->select()                ->from("excel_addon",array("Course_Name"))                 ->where("excel_addon.SESSION= ?", $session)                ->group("Course_Name")                ->order('Course_Name');        $result = $this->getAdapter()                ->fetchAll($select);               return $result;    }            public function getAddonExcelDropDownListbysessionandcourse($session,$course) {             $select = $this->_db->select()                ->from("excel_addon")                 ->where("excel_addon.SESSION like ?", $session)                 ->where("excel_addon.Course_Name like ?", $course)                ->order('Name');               // echo "<pre>".$select; die;        $result = $this->getAdapter()                ->fetchAll($select);               return $result;    }            public function getAddonExcelDropDownListbystudentandcourse($stu_id,$course) {             $select = $this->_db->select()                ->from("excel_addon")                 ->where("excel_addon.Form_Id like ?", $stu_id)                 ->where("excel_addon.Course_Name like ?", $course);        $result = $this->getAdapter()                ->fetchRow($select);               return $result;    }         public function getDropDownListByYearID($acad) {        $select = $this->_db->select()                ->from($this->_name, array('id', 'name'))    ->join(array('addon_item' => 'addon_course_master_item'), "addon_item.addon_mater_id = $this->_name.id", array('capacity','fee','tot_credit','academic_year','id as itemid'))               ->where("addon_item.academic_year= ?", $acad)               ->where("addon_item.status != ?", 2)                ->order('name  ASC');        $result = $this->getAdapter()->fetchAll($select);        $data = array();        $st_year = '';        $end_year = '';        foreach ($result as $val) {            $data[$val['id']] = $val['name'];            // $data[$val['academic_id']] = substr($val['from_date']).'-'.substr($val['to_date']);            //print_r($data);die;        }        return $data;    }}