<script>var id = '<?=$this->id?$this->id:0;?>';//if(id != 0){//$('button').hide();//   $('<div class="col-sm-12 text-center"><h4 class="text-danger"><strong>**Published TABULATION REGISTER Cannot be Modified.<br><small class="text-danger"><b>(Note:</b>&nbsp; Course Listed only with Created Evaluation Components.<b>)</b></small></strong></h4></div>').insertBefore('table');//}//else//{//   $('button').show(); //}</script><style>    button{        display:none;    }</style>    <?php$fail_Val = array('D'=>'F','F'=>'F');$item_result = $this->result;$passpercent = $this->passpercent;$dept_name = $this->dept_name;$session_model = new Application_Model_Session();$gradeReportModel = new Application_Model_BackGradeAllocationReportItems();$session_name = $session_model->getRecord($item_result[0]['session'])['session'];//====Variable Declaration==========//$i = 1;$k = 0;$tot_credit_point = $tot_grade_point = $one_row = $stu_data_pr = $component = $weightage = 0;$EvaluationComponents_model = '';$geData = array();$geWeightage = array();$ct_arr = $weightage_arr = $component_arr = array();$session =0 ;$examyear= "" ;//======['start printing tabulation register']=======//for ($i = 0; $i < count($item_result); $i++) {    $tot_arr = array();    ?><!--[table head to be aligned into middle]---------->    <style>        .table>caption+thead>tr:first-child>td, .table>caption+thead>tr:first-child>th, .table>colgroup+thead>tr:first-child>td, .table>colgroup+thead>tr:first-child>th, .table>thead:first-child>tr:first-child>td, .table>thead:first-child>tr:first-child>th {            border-top: 0;            vertical-align: middle !important;        }        .table-bordered>thead>tr>td, .table-bordered>thead>tr>th {            border-bottom-width: 2px;            vertical-align: middle !important;        }    </style>    <div class="box-body table-responsive">        <div style="overflow-x:scroll">            <input type ="hidden" value='<?=$this->id?$this->id:0;?>' id ='tabl_id' />            <table class="table table-striped table-bordered mb30 jambo_table bulk_action" id='dataTable' style="height:20em;" >                <thead>                    <tr>                         <th rowspan="2" class="complex" data-id='hide'>S. No.</th>                        <th rowspan="2" class="complex" data-id='hide'>Name of Participants</th><!--                        <th rowspan="2" class="complex">ID Number</th>-->                        <th rowspan="2" class="complex" data-id='hide'>Exam Roll No</th>                         <th rowspan="2" class="complex" data-id='hide'>Reg No.</th>                 <input type ="text"  name ="academic_id[]" style="display:none;" value ="<?= $item_result[$i]['academic_year_id']; ?>_<?= $item_result[$i]['term_id']; ?>"/>                <input style="display:none;" type="text" id="dept" value="<?=$dept_name;?> " />                <?php                /*                 * calling model course_corse_learning                 * if course credit has been created                 * then get the courseType value                  *                  */                $Corecourselearning_model = new Application_Model_Corecourselearning();                $course_type_result = $Corecourselearning_model->getcourseTypeOn($item_result[$i]['academic_year_id'], $item_result[$i]['term_id']);                $session = $item_result[$i]['session'];//-------------------------------------------------------****************------------------------------------------------------------------------------------------------//                     foreach ($course_type_result as $course_type_key => $course_type_val) {//====printing upper head with component==//                     $item_result[$i]['course_id'] = $course_type_val['course_id'];                    ?>                    <th rowspan="2" class="complex" data-id='hide'><?= $course_type_val['ct_name']; ?> / Course Code</th><!--                    <th rowspan="2" class="complex" data-id="hide">Course Code</th>-->                    <?php if ($component == 0) { ?>                        <th class="complex">Component</th>                        <?php $component++;                    } ?>                    <?php                    //====================[getting all the evaluation component]======================================//                    $EvaluationComponents_model = new Application_Model_EvaluationComponents();                    $result = $EvaluationComponents_model->getAllComponentsonTerms(0, 0, $item_result[$i]['course_id']);                     foreach ($result as $k => $val) {                        ?>                        <th class="complex"><?php echo $val['component_name']; ?></th>                        <th class="complex">Rem</th>        <?php } ?>                    <th class="complex">Total</th>                    <th class="complex" data-id="">credit</th>                    <th class="complex" data-id="">Grade Letter</th>                    <th class="complex" data-id="">Grade Point</th>                    <th class="complex" data-id="">Credit Point</th>                    <th class="complex"><?= $course_type_val['ct_name']; ?> Rem</th>    <?php } ?>                <th class="complex">SGPA</th>                <th class="complex">Current Semester</th>                <th class="complex">Final Remarks</th>                <th class="complex" >Fail in</th>                </tr> <?php //==========[END Printing upper components]====================// ?>  <!-----------------------------------------------------------**************************---------------------------------------------------------------------------->                <tr>                    <?php                    //========================[Getting all the course and ge_id for the weightage]============================//                    $newData = $EvaluationComponents_model->getAllComponentsonTerms1($item_result[$i]['academic_year_id'], $item_result[$i]['term_id'], 0);                    $eval_items = new Application_Model_EvaluationComponentsItems();                    $getNewWeightage = $ct_arr = $getWeightage = array();                    //==================[Fettering Weightage according to their courses_id]=============================================]=======//                    foreach ($newData as $Studkey => $newVal) {                        $getWeightage[$newVal['ct_id']][$newVal['course_id']][$newVal['component_id']] = $newVal['weightage'];                    }                                                            //===========================[Start printing the lower head with weightage]==============================================//                    foreach ($course_type_result as $course_type_key => $course_type_val) {                        $component_arr = array();                        $item_result[$i]['course_id'] = $course_type_val['course_id'];                        //===============[Filtering according to their component id]======================//                        foreach ($getWeightage[$course_type_val['ct_id']] as $Studkey => $newVal) {                            Ksort($newVal);                            foreach ($newVal as $component_id => $weightage_val) {                                $getNewWeightage[$course_type_val['ct_id']][$component_id][] = $weightage_val;                            }                        }                                                $result = $getNewWeightage[$course_type_val['ct_id']];                        ?>                        <?php if ($weightage == 0) { ?>                            <th>Weightage</th>                            <?php $weightage++;                        } ?>                        <?php $arr_check = array(); ?>                        <?php                        /*                         * this loop making single head uniqe if duplicates                          * marks and print the weightage                         *                          *                          */                            foreach ($result as $k => $val) {                                if(!empty($k)){                            $val1 = $val;                            $val = array_unique($val);                            ?>                            <th><?php                            foreach($val as $index => $fullMks ){                                  if($fullMks==250)                                    $passpercent = 50;                               else if($fullMks==25)                                   $passpercent = 50;                                                               $passmarks = ((int)$passpercent/100)*(int)$fullMks;                                $val[$index] = $fullMks."($passmarks)";                            }?><?php                                echo implode('/', $val);                                $new_arr = $val1;                                foreach ($new_arr as $weightage_key => $to_val) {                                    $tot_arr[$course_type_val['ct_id']][$weightage_key] += $to_val;                                }                                ?></th>                            <th></th>                            <?php                                }                        }                        $total_sub_mks = array_unique($tot_arr[$course_type_val['ct_id']]);                        ?>                        <th><?= implode('/', $total_sub_mks); ?></th>                        <th class=""></th>                        <th class=""></th>                        <th class=""></th>                        <th class="">(Credit x Grade Point)</th>                        <th></th>    <?php } ?>                    <th></th>                    <th></th>                    <th></th>                    <th></th>                </tr>  <!-----------------------[End printing head]--------------------------------------------------------------------------------------------------->                </thead>                <tbody>                    <?php                    $m = 1;                    $inde = 0;                    $corce = array();                    $course_learning = new Application_Model_ElectiveSelection();                    $StudentPortal_model = new Application_Model_StudentPortal();                      $tbl_id=$this->id?$this->id['tabl_id']:0;                    $publishedStudent = $gradeReportModel->getPublishedStudent($item_result[0]['academic_year_id'], $item_result[0]['term_id'],$tbl_id);                       $publishedStudentsId = array_column($publishedStudent,'student_id');                       $acd_details = new Application_Model_Academic();               $deg_details = new Application_Model_Department();               $d_id = $acd_details->getRecord($item_result[$i]['academic_year_id'])['department'];                $term_details = new Application_Model_TermMaster();                        $cmn_term = $term_details->getRecord($item_result[$i]['term_id'])['cmn_terms'];               $degree_id= $deg_details->getRecord($d_id)['degree_id'];            $exam_model =  new Application_Model_ExamDateModel();                        $examinfo = $exam_model->getRecordByBatchAndTerm($item_result[$i]['academic_year_id'],$cmn_term);                        $examyear = date("F - Y",strtotime($examinfo['examination_month']));                        $resultdate = date("d-m-Y",strtotime($examinfo['result_publish_date']));                    $category_data = $StudentPortal_model->getelectivestudentDetailsBack($item_result[$i]['academic_year_id'],$item_result[$i]['term_id'],$this->pay,$this->month);                                        foreach ($category_data as $stu_data) {                        $tot_credit_point = $total_gradepoint = $one_row = $stu_data_pr = 0;                $gp =  $fcourse_name =   $fcourse_ids =    $fail = $c_id = $fail_ct_id = $fail_in = $ge_check_arr = array();                       $item_result[$i]['course_id']='';                        $bool = $course_learning->getStudentSelectedStudents($item_result[$i]['academic_year_id'], $item_result[$i]['term_id'], $stu_data['student_id']);                                if(!$bool){                                    continue;                                }                        ?>                                           <tr title = "<?php echo $stu_data['students']; ?>">                            <input type='text' style="display:none;" name='stu_ids[]' value="<?=$stu_data['student_id'];?>" />                            <?php                            foreach ($course_type_result as $course_type_key => $course_type_val) {                                $ge_id_arr = $Corecourselearning_model->getcourseTypeOn1($item_result[$i]['academic_year_id'], $item_result[$i]['term_id']);                                if ($course_type_val['ge_id'] != 0) {                                    foreach ($ge_id_arr as $ge_key => $ge_val) {                                        $item_result[$i]['course_id'] = $course_learning->getStudentSelectedElectivesOnBackGeId($item_result[$i]['academic_year_id'], $item_result[$i]['term_id'], $stu_data['student_id'], $ge_val['ge_id'],$ge_val['course_id']);                              if (!empty($item_result[$i]['course_id']) && !in_array($ge_val['course_id'], $ge_check_arr) && $course_type_val['ct_id']==$ge_val['ct_id']) {                                            $ge_check_arr[] = $ge_val['course_id'];                                            $prin_len = 0;                                            break;                                        } else {                                         $item_result[$i]['course_id']='';                                        }                                    }                                } else if($course_type_val['ge_id']==0){                                     $item_result[$i]['course_id'] = $course_learning->getStudentSelectedElectivesOnBackGeId($item_result[$i]['academic_year_id'], $item_result[$i]['term_id'], $stu_data['student_id'], 0,$course_type_val['course_id']);                                     if (!empty($item_result[$i]['course_id']) && !in_array($ge_val['course_id'], $ge_check_arr)) {                                         $ge_check_arr[] = $course_type_val['course_id'];                                          $item_result[$i]['course_id'] = $course_type_val['course_id'];                                          $prin_len = 0;                                     }                                                                   }                             //   $result = $EvaluationComponents_model->getAllComponentsonTerms(0, 0, $item_result[$i]['course_id']);                            if(empty($item_result[$i]['course_id']))                                   $prin_len = 4;                                ?>                                <?php if ($stu_data_pr == 0) { ?>                                    <td><?php echo $m; ?></td>	                                    <td><?php echo $stu_data['stu_fname']; ?> / <?php echo $stu_data['stu_id']; ?></td>                            <input type='text' style="display:none;"  name="grade[student_id_<?= $stu_data['student_id'].$item_result[$i]['academic_year_id']; ?>_<?php echo $item_result[$i]['term_id']; ?>_<?php echo $item_result[$i]['course_id']; ?>][]" id="student_id" value="<?php echo $stu_data['student_id']; ?>" /><!--                            <td><?php //echo $stu_data['stu_id']; ?></td>-->                            <td><?php echo $stu_data['exam_roll']; ?></td>                            <td><?php echo $stu_data['reg_no']; ?></td>                            <?php $stu_data_pr++;                        }                        ?>                        <?php                          if($item_result[$i]['course_id']){                        $course_details = new Application_Model_Course();                        $course = $course_details->getRecord($item_result[$i]['course_id']);                          }                          else{                          $course['course_name'] ='--';                          $course['course_code'] ='--';                           }                        ?>                        <td><?php echo $course['course_name'];                        if (!in_array($item_result[$i]['course_id'], $corce[$course_type_val['ct_id']])) {                            $corce[$course_type_val['ct_id']][] = $item_result[$i]['course_id'];                        } ?> / <?php echo $course['course_code']; ?></td><!--                        <td><?php// echo $course['course_code']; ?></td>-->                        <?php                        ?>                        <?php if ($one_row == 0) { ?>                            <td></td>                            <?php $one_row++;                        } ?>                        <?php                        $total_divisor = $total_marks_obained = $total = 0;                        if(!empty($item_result[$i]['course_id'])){                        $component_grades = '';                        $pass_fail = 'P';                        $pass_fail_final = 'P';                        // foreach($result as $k => $val) {                         $GradeAllocation_model = new Application_Model_GradeAllocation();                        $grade_result = $GradeAllocation_model->getGradeRecordsOnBack($item_result[$i]['academic_year_id'], $item_result[$i]['term_id'], $item_result[$i]['course_id'], $stu_data['student_id'],$this->month);                        $component_grades = $grade_result['component_id'];                        //$grade = $grade_result['grade_value'];                        $component_res = explode(",", $grade_result['component_id']);                        $number_result = explode(",", $grade_result['number_value']);                        $grade_result = explode(",", $grade_result['grade_value']);                                                ?>                        <?php                        $comp_weightages = '';                        $sgparem = 'P';                        foreach ($grade_result as $k => $grade_value) {                            $prin_len--;                            $pass_fail = 'P';                            // echo "<pre>";print_r($number_result);                            $style = '';                                $letter_grade='';                                        if (array_key_exists($grade_value,$fail_Val)) {                                            $style = '';                                            $pass_fail = 'F';                                            $pass_fail_final = 'F';                                                                                    } else if (strtolower($grade_value) == 'ab') {                                            $number_result[$k] = $grade_value;                                            $style = 'style="color: #ff0000"';                                            $style1 = 'style="color: #ff0000"';                                            $pass_fail = 'F';                                        } else if (strtolower($grade_value) == 'na') {                                            $number_result[$k] = 'NA';                                            $style = 'style="color: #ff0000"';                                            $pass_fail = 'F';                                            $pass_fail_final = 'F';                                        }                                        else if($number_result[$k] == ''){                                        $number_result[$k] = '--';                                        $letter_grade = '--';                                        }                                        elseif ($number_result[$k] == 0) {                                            $number_result[$k] = 0;                                        } else if (empty($grade_value)){                                            $number_result[$k] = '--';                                            $letter_grade = '--';                                        }                            ?>                                                   <td <?= $style; ?>><?php echo $number_result[$k];if($pass_fail =='F'){echo "*";} ?></td>                            <?php $total_marks_obained += is_numeric($number_result[$k]) ? (int) $number_result[$k] : 0; ?>                            <?php $marks_obained = is_numeric($number_result[$k]) ? (int) $number_result[$k] : 0; ?>                            <?php                                                        $EvaluationComponentsItems_model = new Application_Model_EvaluationComponentsItems();                            $comp_weigh = $EvaluationComponentsItems_model->getweightages(0, 0, $item_result[$i]['course_id'], $component_res[$k]);                            $comp_weightages = $comp_weightages . $comp_weigh['weightage'] . ",";                            $tot_marks = (int) $comp_weigh['weightage'];                            $total_divisor += (int) $tot_marks;                      if($letter_grade == '--'){                                $letter_grade = '--';                            }                            elseif ($tot_marks != 0 && $marks_obained > 0) {//                                $num = round(((int) $marks_obained / $tot_marks) * 100);////                                $ref_grade_item = new Application_Model_ReferenceGradeMasterItems();//                                $letter_grade = $ref_grade_item->getRecordByNumGrade($num);//                                $letter_grade = $letter_grade == 'F' ? 'F' : 'P';                                $letter_grade = $pass_fail;                            }                                                         elseif ($tot_marks == 0) {                                $letter_grade = '--';                            } elseif ($marks_obained == 0) {                                $letter_grade = 'F';                                $pass_fail = 'F';                            }                            ?>                                                        <?php if(count($grade_result) == 1 && empty($grade_result[0])){                                 $prin_len = 2;                                //$total_marks_obained = '--';                            for ($o = 0; $o < $prin_len; $o++) { ?>                            <td>--</td>                            <td>--</td>                            <?php }                                                         } ?>                            <td <?php                                                        if($total_marks_obained == 0){                                $pass_fail = '--';                            }                if (strtolower($letter_grade) == 'f') {                    $fail_in[] = $course_type_val['ct_name'];                    $fail_ct_id[] = $course_type_val['ct_id'];                    $fcourse_name[] = $course['course_code'];                    $fcourse_ids[] =  $item_result[$i]['course_id'];                     echo 'style="color: #ff0000; font-weight:bolder"';                } ?>> <?= $letter_grade; ?> </td>            <?php }                         } else{                            $total_marks_obained = '--';                            $pass_fail = '--';                                       for ($o = 0; $o < $prin_len; $o++) {                                  ?>                                                            <td>--</td>                            <td>--</td>            <?php                             }      }            ?><input type="text" name="saved_id" style="display:none;" value="<?=$this->id?$this->id['tabl_id']:0;?>"/>            <input type="text" style="display:none;" name="studSaveId[<?=$stu_data['student_id'];?>]" value="<?=in_array($stu_data['student_id'],$publishedStudentsId)?1:0;?>" />                        <input type='text' style="display:none;" name="course_ids[]" value ="<?=$item_result[$i]['course_id'];?>" />                        <input type='text' style="display:none;"   name="grade[weightages_<?= $stu_data['student_id'].$item_result[$i]['academic_year_id']; ?>_<?php echo $item_result[$i]['term_id']; ?>_<?php echo $item_result[$i]['course_id']; ?>][]" value="<?php echo $comp_weightages; ?>" />                        <input type='text' style="display:none;"   name="grade[grades_<?= $stu_data['student_id'].$item_result[$i]['academic_year_id']; ?>_<?php echo $item_result[$i]['term_id']; ?>_<?php echo $item_result[$i]['course_id'] ?>][]" value="<?php echo $component_grades; ?>" />                        <td><?php echo $total_marks_obained;if($pass_fail_final =='F'){echo "*";} ?></td>            <?php            if($item_result[$i]['course_id']){            // total credit value             $core_course_master = new Application_Model_Corecourselearning();            $course_credit_info = $core_course_master->getCoreCouseDetailByTermAcademicCourse($item_result[$i]['academic_year_id'], $item_result[$i]['term_id'], $item_result[$i]['course_id']);            ?>                                                  <?php                        //==========[Add all the credit point of all the coure of student simply]                        $tot_credit_point += (double) ($course_credit_info['count_id'] == 0 ? $course_credit_info['credit_value'] : 0);                        ?>                        <td><?= $course_credit_info['count_id'] == 0 ? $course_credit_info['credit_value'] : 0; ?></td>            <?php            //letter grade            $total_marks_obained = $total_marks_obained != 0 ? $total_marks_obained : '--';            $tot_marks = $tot_arr[$course_type_val['ct_id']][array_keys($corce[$course_type_val['ct_id']], $item_result[$i]['course_id'], true)[0]];            if (!empty($total_divisor)) {                if($total_marks_obained != '--'){                $num = round(((int) $total_marks_obained / $total_divisor) * 100);                $ref_grade_item = new Application_Model_ReferenceGradeMasterItems();                                                     $letter_grade = $ref_grade_item->getRecordByNumGrade($num,$degree_id,$session);}                else {                    $letter_grade = 'F';                }            } else {                $letter_grade = 'F';                $pass_fail = 'F';                $pass_fail_final = 'F';            }            ?>                        <td <?php                        if (strtolower($letter_grade) == 'f') {                            echo 'style="color: #ff0000; font-weight:bolder"';                        }            ?>><?= $letter_grade == 'F' ? 'F' : 'P'; ?></td>            <?php           $pass_fail =  $pass_fail_final ;            if (!is_numeric($letter_grade) && !empty($letter_grade)) {                $ReferenceGradeMaster_model = new Application_Model_ReferenceGradeMaster();                $letter_grade = $pass_fail == 'F' ? 'F' : $letter_grade;                $letter_grade_result = $ReferenceGradeMaster_model->getNumberGradeValue(0, $letter_grade,$degree_id,$session);                $numeric_grade = $letter_grade_result['number_grade'];            } else if (is_numeric($letter_grade)) {              $numeric_grade = $letter_grade;            } $total =  $numeric_grade * $course_credit_info['credit_value'] ; //$total = $course_credit_info['count_id'] == 0 ? $numeric_grade * $course_credit_info['credit_value'] : 0;            }            ?>                        <td><?= empty($numeric_grade)?0:$numeric_grade; ?></td>            <?php            //======[Adding all the grade point of all the core of same student];            $total_gradepoint += $total;                                              ?>                        <td><?php echo number_format($total, 0); ?></td>                        <td <?php                                                         if (strtolower($pass_fail) == 'f') {                echo 'style="color: #ff0000; font-weight:bolder"';                $gp[] = $total;            }else if(strtolower($pass_fail) == 'p' && $total > 0){$c_id[] = $item_result[$i]['course_id'];                $gp[] = $total;            }            ?>><?= $pass_fail; ?></td>                        <input type='text' style="display:none;"  name="grade[grade_point_<?= $stu_data['student_id'].$item_result[$i]['academic_year_id']; ?>_<?php echo $item_result[$i]['term_id']; ?>_<?php echo $item_result[$i]['course_id']; ?>][]" value="<?php $tot = number_format($total, 2);            echo $tot;            ?>" />                           <?php }$sgpa = ($total_gradepoint / $tot_credit_point) ?>                    <td>--<?php //echo number_format($sgpa, 2); ?></td>                    <td></td>                    <td></td>                    <td><?=implode('/', array_unique($fcourse_name)); ?></td>        <input type='text' style="display:none;"  name="fail_in[]" value="<?=implode(',', array_unique($fail_ct_id)) ;?>" />        <input type='text' style="display:none;"  name="c_id[]" value="<?=implode(',', array_unique($c_id)) ;?>" />        <input type='text' style="display:none;"  name="gp[]" value="<?=implode(',', ($gp)) ;?>" />        <input type='text' style="display:none;"  name="fcourse_ids[]" value="<?=implode(',', array_unique($fcourse_ids)) ;?>" />        <input type='text' style="display:none;"  name="sgpa[]" value="<?=$sgpa;?>" />        <input type='text' style="display:none;"  name="tot_credit_point[]" value="<?=$tot_credit_point;?>" />        <input type='text' style="display:none;"  name="tot_grade_point[]" value="<?=$total_gradepoint;?>" />                    </tr>          <?php $m++; ?>    <?php }    ?>	                </tbody>            </table>        </div>    </div>    <div id="addmore_items_<?php echo $i; ?>"></div>    <br>    <?php}function selectData($array, $fieldname, $number = 0) {    try {        $filterd_value = array();        if (is_array($array) && is_array($fieldname)) {            for ($i = 0; $i < $number; $i++) {                foreach ($fieldname as $field_key => $field_value) {                    $filterd_value[$i][$field_value] = $array[$i][$field_value];                }            }            return $filterd_value;        } else {            throw new Exception('first and second param should be of type array !');        }    } catch (Exception $e) {        echo '<strong>Error Message !</strong>' . $e->getMessage();    }}?><script>    $('table').each(function () {        var check_val = $(this).find('thead>tr:nth-child(2)>th:nth-child(1)').text();        if (check_val.toLowerCase() != 'weightage') {            $(this).prev().attr('style', 'display:none');            $(this).removeAttr('id');            $(this).attr('style', 'display:none');        }    });    $('<div class="row" id="moved-buttons" style="margin-top:1em; margin-right:.09em;"></div>').appendTo('#datatable-responsive_filter')    $('div[class="dt-buttons btn-group"]').appendTo('#moved-buttons');     setDatatables('<?=$dept_name;?>','<?=$session_name;?>','<?=$examyear;?>','<?=$resultdate;?>','<?=$degree_id;?>',true);</script>